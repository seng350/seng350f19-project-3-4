{"version":3,"file":"heroRouter.js","sourceRoot":"","sources":["../../src/routes/heroRouter.ts"],"names":[],"mappings":";;AACA,sCAAyC;AACzC,IAAM,MAAM,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;AAC/C;IAeI;QACI,oBAAoB;IACxB,CAAC;IAhBa,iBAAM,GAApB,UAAqB,MAAc;QAC/B,KAAK;QACL,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;QAE9D,qBAAqB;QACrB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YACtE,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC1E,IAAI,UAAU,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IAMD;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,QAAQ,CAAC,OAAO,EAAE;aACb,IAAI,CAAC,UAAC,EAAE;YACL,OAAO,EAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACrD,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,MAAU;YACb,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrB,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,GAAG;YACP,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAA;IACV,CAAC;IACD;;OAEG;IACI,2BAAM,GAAb,UAAc,GAAY,EAAE,GAAa,EAAE,IAAkB;QACzD,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACpC,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAC,IAAS,IAAK,OAAA,IAAI,CAAC,EAAE,KAAK,KAAK,EAAjB,CAAiB,CAAC,CAAC;QACzD,IAAI,IAAI,EAAE;YACN,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACV,IAAI,CAAC;gBACF,OAAO,EAAE,SAAS;gBAClB,MAAM,EAAE,GAAG,CAAC,MAAM;gBAClB,IAAI,MAAA;aACP,CAAC,CAAC;SACV;aACI;YACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;iBACV,IAAI,CAAC;gBACF,OAAO,EAAE,kCAAkC;gBAC3C,MAAM,EAAE,GAAG,CAAC,MAAM;aACrB,CAAC,CAAC;SACV;IACL,CAAC;IAEL,iBAAC;AAAD,CAAC,AA1DD,IA0DC;AA1DY,gCAAU","sourcesContent":["import {Router, Request, Response, NextFunction} from 'express';\nimport DbClient = require(\"../DbClient\");\nconst Heroes = require('../../dist/data.json');\nexport class HeroRouter {\n    public static create(router: Router) {\n        //log\n        console.log(\"[HeroRoute::create] Creating HeroRoutes route.\");\n\n        //add home page route\n        router.get(\"/api/heroes\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getAll(req, res, next);\n        });\n\n        router.get(\"/api/heroes/:id\", (req: Request, res: Response, next: NextFunction) => {\n            new HeroRouter().getOne(req, res, next);\n        });\n    }\n\n    constructor() {\n        // not much here yet\n    }\n\n    /**\n     * GET all Heroes.\n     */\n    public getAll(req: Request, res: Response, next: NextFunction) {\n        DbClient.connect()\n            .then((db) => {\n                return db!.collection(\"heroes\").find().toArray();\n            })\n            .then((heroes:any) => {\n                console.log(heroes);\n                res.send(heroes);\n            })\n            .catch((err) => {\n                console.log(\"err.message\");\n            })\n    }\n    /**\n     * GET one hero by id\n     */\n    public getOne(req: Request, res: Response, next: NextFunction) {\n        let query = parseInt(req.params.id);\n        let hero = Heroes.find((hero: any) => hero.id === query);\n        if (hero) {\n            res.status(200)\n                .send({\n                    message: 'Success',\n                    status: res.status,\n                    hero\n                });\n        }\n        else {\n            res.status(404)\n                .send({\n                    message: 'No hero found with the given id.',\n                    status: res.status\n                });\n        }\n    }\n\n}"]}