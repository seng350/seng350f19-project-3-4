{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/routes/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,iCAAoC;AAEpC,sEAAmE;AAEnE;;;;GAIG;AACH;IAAgC,8BAAS;IAyBrC;;;;;OAKG;IACH;eACI,iBAAO;IACX,CAAC;IA/BD;;;;;;OAMG;IACW,iBAAM,GAApB,UAAqB,MAAc;QAC/B,KAAK;QACL,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;QAC1D,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3B,qBAAqB;QACrB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAY,EAAE,GAAa,EAAE,IAAkB;YAC5D,IAAI,UAAU,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH;;;;aAIK;IAET,CAAC;IAYD;;;;;;;;OAQG;IACI,0BAAK,GAAZ,UAAa,GAAY,EAAE,GAAa,EAAE,IAAkB;QAA5D,iBAyBC;QAxBG,oDAAoD;QACpD,uDAAuD;QACvD,iDAAiD;QACjD,IAAI,OAAO,GAAG,IAAI,qCAAiB,EAAE,CAAC;QAGtC,kBAAkB;QAClB,IAAI,CAAC,KAAK,GAAG,gBAAgB,CAAC;QAE9B,OAAO,CAAC,YAAY,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC;aACjC,IAAI,CAAC,UAAC,IAAI;YACP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,aAAa;YACb,IAAI,OAAO,GAAW;gBAClB,OAAO,EAAE,IAAI;aAChB,CAAC;YACF,OAAO,OAAO,CAAC;QACnB,CAAC,CAAC;aACD,IAAI,CAAC,UAAC,OAAY;YACf,+CAA+C;YAC/C,oBAAoB;YACpB,iBAAiB;YACjB,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACP,CAAC;IACL,iBAAC;AAAD,CAAC,AAtED,CAAgC,iBAAS,GAsExC;AAtEY,gCAAU","sourcesContent":["\nimport { NextFunction, Request, Response, Router } from \"express\";\nimport { BaseRoute } from \"./route\";\n\nimport {SessionController} from \"../controllers/SessionController\";\n\n/**\n * / route\n *\n * @class IndexRoute\n */\nexport class IndexRoute extends BaseRoute {\n\n    /**\n     * Create the routes.\n     *\n     * @class IndexRoute\n     * @method create\n     * @static\n     */\n    public static create(router: Router) {\n        //log\n        console.log(\"[IndexRoute::create] Creating index route.\");\n        let path = require('path');\n        //add home page route\n        router.get(\"/\", (req: Request, res: Response, next: NextFunction) => {\n            new IndexRoute().index(req, res, next);\n        });\n        /*\n        router.get(\"/stylesheets/style.css\", (req: Request, res: Response, next: NextFunction) =>\n        {\n            res.sendFile(path.join(__dirname + \"../../../stylesheets/style.css\"));\n        });*/\n\n    }\n\n    /**\n     * Constructor\n     *\n     * @class IndexRoute\n     * @constructor\n     */\n    constructor() {\n        super();\n    }\n\n    /**\n     * The login page route.\n     *\n     * @class IndexRoute\n     * @method index\n     * @param req {Request} The express Request object.\n     * @param res {Response} The express Response object.\n     * @next {NextFunction} Execute the next method.\n     */\n    public index(req: Request, res: Response, next: NextFunction) {\n        //The index page should be default be the login page\n        //Create a SessionController to get a list of all users\n        //Populate page with users from SessionController\n        let session = new SessionController();\n\n\n        //set custom title\n        this.title = \"Grade Achiever\";\n\n        session.RequestUsers(req,res,next)\n        .then((mess) => {\n            console.log(mess);\n            //set message\n            let options: Object = {\n                \"users\": mess\n            };\n            return options;\n        })\n        .then((options: any)=>{\n            //console.log(\"I'm doing the thing: \"+options);\n            //res.send(options);\n            //render template\n            this.render(req, res, \"index\", options);\n        });\n    }\n}\n"]}