{"version":3,"file":"UserModel.js","sourceRoot":"","sources":["../../src/models/UserModel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,yCAAwC;AAGxC;IAA+B,6BAAS;IAGpC,mBAAY,MAAc;QAA1B,YAEI,kBAAM,MAAM,CAAC,SAMhB;QALG,mHAAmH;QACnH,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAC;IACM,2BAAO,GAAd,UAAe,QAAgB,EAAE,KAAa;QAE1C,6CAA6C;QAC7C,IAAG,IAAI,CAAC,OAAO,EACf;SAEC;aAED;YACI,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAChD;IAEL,CAAC;IACM,8BAAU,GAAjB,UAAkB,MAAc;QAE5B,IAAG,IAAI,CAAC,OAAO,EACf;SAEC;aAED;YACI,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAChD;IACL,CAAC;IACM,wCAAoB,GAA3B,UAA4B,WAAmB;IAG/C,CAAC;IACM,wCAAoB,GAA3B,UAA4B,iBAAyB;IAGrD,CAAC;IACM,4BAAQ,GAAf,UAAgB,KAAa;IAG7B,CAAC;IACM,6BAAS,GAAhB,UAAiB,MAAmB;IAGpC,CAAC;IACM,gCAAY,GAAnB,UAAoB,UAAkB;QAElC,2EAA2E;IAC/E,CAAC;IACM,kCAAc,GAArB;IAGA,CAAC;IACM,wCAAoB,GAA3B;IAGA,CAAC;IACM,8BAAU,GAAjB;IAGA,CAAC;IAGL,gBAAC;AAAD,CAAC,AAtED,CAA+B,qBAAS,GAsEvC;AAtEY,8BAAS","sourcesContent":["import { BaseModel } from \"./BaseModel\";\r\nimport { CourseModel } from \"./CourseModel\";\r\n\r\nexport class UserModel extends BaseModel {\r\n    private readonly isAdmin : boolean;\r\n    private readonly userID : Number;\r\n    constructor(userID: Number)\r\n    {\r\n        super(\"User\");\r\n        //We can test here the id of the user submitting the request - if it's an admin user we can allow for admin actions\r\n        let isAdmin = false;\r\n        this.isAdmin = isAdmin;\r\n\r\n        this.userID = userID;\r\n    }\r\n    public AddUser(userName: string, email: string)\r\n    {\r\n        //Add the user to the database using dbClient\r\n        if(this.isAdmin)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n            throw new Error(\"Invalid admin credentials\");\r\n        }\r\n\r\n    }\r\n    public RemoveUser(userID: Number)\r\n    {\r\n        if(this.isAdmin)\r\n        {\r\n\r\n        }\r\n        else\r\n        {\r\n            throw new Error(\"Invalid admin credentials\");\r\n        }\r\n    }\r\n    public SetAlgorithmAccuracy(algAccuracy: Number)\r\n    {\r\n\r\n    }\r\n    public SetNotificationLevel(notificationLevel: Number)\r\n    {\r\n\r\n    }\r\n    public SetEmail(email: string)\r\n    {\r\n\r\n    }\r\n    public AddCourse(course: CourseModel)\r\n    {\r\n\r\n    }\r\n    public RemoveCourse(courseName: string)\r\n    {\r\n        //The course should be uniquely identifiable by the user id and course name\r\n    }\r\n    public GetUserDetails()\r\n    {\r\n\r\n    }\r\n    public GetAlgorithmAccuracy()\r\n    {\r\n\r\n    }\r\n    public GetCourses()\r\n    {\r\n\r\n    }\r\n\r\n\r\n}"]}